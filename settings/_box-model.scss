//
// PADDING
//
@mixin paddingX($pdd: null, $pl: null, $pr: null, $neg-margin: false) {
  padding-left: $pdd;
  padding-right: $pdd;

  @if $pl != null {
    padding-left: $pl;
  }
  @if $pr != null {
    padding-right: $pr;
  }

  @if $neg-margin == true {
    @if $pdd != null {
      margin-left: $pdd * (-1);
      margin-right: $pdd * (-1);
    }
    @if $pl != null {
      margin-left: $pl * (-1);
    }
    @if $pr != null {
      margin-right: $pr * (-1);
    }
  }
}

@mixin paddingY($pdd: null, $pt: null, $pb: null, $neg-margin: false) {
  padding-top: $pdd;
  padding-bottom: $pdd;

  @if $pt != null {
    padding-top: $pt;
  }
  @if $pb != null {
    padding-bottom: $pb;
  }
  @if $neg-margin == true {
    @if $pdd != null {
      margin-left: $pdd * (-1);
      margin-right: $pdd * (-1);
    }

    @if $pt != null {
      margin-left: $pt * (-1);
    }
    @if $pb != null {
      margin-right: $pb * (-1);
    }
  }
}

//
// MARGIN
//

@mixin marginX($mgn: null, $ml: null, $mr: null, $neg-padding: false) {
  margin-left: $mgn;
  margin-right: $mgn;

  @if $ml != null {
    margin-left: $ml;
  }
  @if $mr != null {
    margin-right: $mr;
  }

  @if $neg-padding == true {
    @if $mgn != null {
      padding-left: $mgn * (-1);
      padding-right: $mgn * (-1);
    }
    @if $ml != null {
      padding-left: $ml * (-1);
    }
    @if $mr != null {
      padding-right: $mr * (-1);
    }
  }
}

@mixin marginX($mgn: null, $mt: null, $mb: null, $neg-padding: false) {
  margin-top: $mgn;
  margin-bottom: $mgn;

  @if $mt != null {
    margin-top: $mt;
  }
  @if $mb != null {
    margin-bottom: $mb;
  }

  @if $neg-padding == true {
    @if $mgn != null {
      padding-top: $mgn * (-1);
      padding-bottom: $mgn * (-1);
    }
    @if $mt != null {
      padding-top: $mt * (-1);
    }
    @if $mb != null {
      padding-bottom: $mb * (-1);
    }
  }
}

@mixin listMargin($ml: null, $mt: null, $invert: null, $col: null) {
  & + & {
    margin-left: $ml;
    margin-top: $mt;

    @if $invert != null {
      // Invert: how many times margin-top should be bigger than margin-left on mobile devices;
      @include responsive($col) {
        margin-top: $ml * $invert;
        margin-left: 0;
      }
    }
  }
}
